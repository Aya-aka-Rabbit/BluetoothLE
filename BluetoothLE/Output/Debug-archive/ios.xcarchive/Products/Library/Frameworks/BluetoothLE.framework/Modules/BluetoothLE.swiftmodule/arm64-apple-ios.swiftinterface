// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.1 (swiftlang-1300.0.31.4 clang-1300.0.29.6)
// swift-module-flags: -target arm64-apple-ios15.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name BluetoothLE
@_exported import BluetoothLE
import CoreBluetooth
import Foundation
import Swift
import _Concurrency
extension BluetoothLE.PeripheralServiceDelegate {
  public func bluetoothPoweredOn()
  public func bluetoothPoweredOff()
  public func bluetoothUnauthorized()
  public func bluetoothUnsupported()
  public func bluetoothServiceError()
  public func bluetoothResetting()
}
@objc @_inheritsConvenienceInitializers final public class CentralService : ObjectiveC.NSObject {
  @objc override dynamic public init()
  @objc deinit
}
public protocol Service {
  var serviceId: Swift.String { get }
}
@_hasMissingDesignatedInitializers final public class ServiceManager {
  public static func sharedPeripheral() -> BluetoothLE.PeripheralService
  public static func sharedCentral() -> BluetoothLE.CentralService
  @objc deinit
}
public enum PeripheralServiceError : Swift.Error {
  case AdvertisementServiceIdNotAdded
  case AlreadyAdvertised
  public static func == (a: BluetoothLE.PeripheralServiceError, b: BluetoothLE.PeripheralServiceError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public class ABC {
  public init()
  public func MyPrint()
  @objc deinit
}
public class ABCDEF {
  public init()
  public func MyPrint()
  @objc deinit
}
public class Sample_Class {
  public init()
  public func MyPrint()
  @objc deinit
}
extension BluetoothLE.PeripheralService : CoreBluetooth.CBPeripheralManagerDelegate {
  @objc final public func peripheralManagerDidUpdateState(_ peripheral: CoreBluetooth.CBPeripheralManager)
}
public protocol PeripheralServiceDelegate {
  func AdvertisementLocalName() -> Swift.String
}
extension BluetoothLE.PeripheralService : BluetoothLE.Service {
  final public var serviceId: Swift.String {
    get
  }
  final public var isAdvertising: Swift.Bool {
    get
  }
  final public func addAdvertisementService(uuid: Swift.String) -> Swift.Int
  final public func clearServiceUUID() -> Swift.Int
  final public func start() throws -> Swift.Bool
  final public func stop() -> Swift.Bool
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers final public class PeripheralService : ObjectiveC.NSObject {
  final public var delegate: BluetoothLE.PeripheralServiceDelegate?
  @objc deinit
}
extension BluetoothLE.PeripheralServiceError : Swift.Equatable {}
extension BluetoothLE.PeripheralServiceError : Swift.Hashable {}
